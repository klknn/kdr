name: ci

on:
  push:

# Common variables for all platforms (ldc is hardcoded in windows job)
env:
  VST2_SDK: ${{ github.workspace }}/VST2_SDK
  SETUP_VST2_SDK: false
  # List of commands
  DPlugBuild: ${{ github.workspace }}/Dplug/tools/dplug-build/dplug-build
  DplugProcess: ${{ github.workspace }}/Dplug/tools/process/process


defaults:
  run:
    shell: pwsh

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macOS-latest
        arch:
          - 'x86_64'
        compiler:
          - 'ldc-beta'
          - 'ldc-latest'
    steps:
    # Checkout
    - name: Checkout master branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout Dplug repo
      uses: actions/checkout@v2
      with:
        repository: AuburnSounds/Dplug
        path: Dplug
        ref: v10.2.2

    # Cache
    - name: Cache
      id: dplug-cache
      uses: actions/cache@v2
      env:
        cache-name: dplug-cache
      with:
        path: |
          ${{ env.VST2_SDK }}
        key: dplug-cache

    # Install
    - name: Install Dependencies - Ubuntu
      if: startsWith(matrix.os,'ubuntu')
      run: |
        sudo apt-get -yq install libx11-dev

    # - name: Install Dependencies - Mac
    #   if: startsWith(matrix.os,'macOS')
    #   run: |
    #     brew update

    - name: Setup Visual Studio Command Prompt - Windows
      if: startsWith(matrix.os,'windows')
      uses: ilammy/msvc-dev-cmd@v1
      # with:
        # arch: ${{ matrix.arch }}  # 'x64'by default

    - name: Install compiler
      uses: dlang-community/setup-dlang@v1
      with:
        compiler: ${{ matrix.compiler }}

    - name: Install dplug-build
      run: |
        dub build
      working-directory: ./Dplug/tools/dplug-build

    - name: Setup VST2_SDK
      if: contains(env.SETUP_VST2_SDK, 'true') && steps.dplug-cache.outputs.cache-hit != 'true'
      run: |
        curl -LOJ https://www.steinberg.net/sdk_downloads/vstsdk366_27_06_2016_build_61.zip
        7z x ./vstsdk366_27_06_2016_build_61.zip
        mkdir -p ${{ env.VST2_SDK }}/pluginterfaces/vst2.x
        cp "./VST3 SDK/pluginterfaces/vst2.x/aeffect.h" ${{ env.VST2_SDK }}/pluginterfaces/vst2.x/aeffect.h
        cp "./VST3 SDK/pluginterfaces/vst2.x/aeffectx.h" ${{ env.VST2_SDK }}/pluginterfaces/vst2.x/aeffectx.h

    # - name: Install process
    #   run: |
    #     dub build
    #   working-directory: ./Dplug/tools/process

    # Test
    - name: Test synth2
      # macOS raises link errors
      if: startsWith(matrix.os,'macOS') != true
      run: |
        dub test

    ## Synth2 Plugin
    - name: Build synth2
      run: |
        if ("${{ matrix.os }}" -like 'windows*') {
          $Plugins = "-c VST3"
          $BuiltLib = "./builds/Windows-64b-VST/klkn synth2-64.dll"
        } elseif ("${{ matrix.os }}" -like 'macOS*') {
          $Plugins = "-c VST3 -c AU"
          $BuiltLib = "./builds/macOS-64b-VST/klkn synth2.vst/Contents/MacOS/klkn synth2"
        } elseif ("${{ matrix.os }}" -like 'ubuntu*') {
          $Plugins = "-c VST3 -c LV2"
          $BuiltLib = "./builds/Linux-64b-VST/klkn synth2.so"
        }
        $esc = '--%'
        ${{ env.DPlugBuild }} -a ${{ matrix.arch }} $esc $Plugins --final
      # ${{ env.DplugProcess }} $BuiltLib -t 10
      working-directory: .


    # Upload
    # This task uploads the builds directory that contains all artifacts produced by dplug-build
    # You may need to repeat this for each plugin that you build
    # Pattern matching is not supported here
    - name: Upload synth2
      if: matrix.compiler == 'ldc-latest'
      uses: actions/upload-artifact@v2
      with:
        name: synth2-${{ matrix.os }}
        path: ./builds/

  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip CI
