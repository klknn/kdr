name: ci

on:
  push:
  # Nightly builds
  schedule:
    - cron: '00 00 * * *'

# Common variables for all platforms (ldc is hardcoded in windows job)
env:
  VST2_SDK: ${{ github.workspace }}/VST2_SDK
  SETUP_VST2_SDK: true

defaults:
  run:
    shell: pwsh

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macOS-latest
        plugin:
          - synth2
          - freeverb
          - envtool
          - epiano2
        compiler:
          - 'ldc-latest'
    steps:
    # Checkout
    - name: Checkout master branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Cache
    - name: Cache
      id: kdr-cache
      uses: actions/cache@v3
      with:
        path: ${{ env.VST2_SDK }}
        key: kdr-cache

    # Install
    - name: Install Dependencies - Ubuntu
      if: startsWith(matrix.os,'ubuntu')
      run: |
        sudo apt-get -yq install libx11-dev

    - name: Setup Visual Studio Command Prompt - Windows
      if: startsWith(matrix.os,'windows')
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install compiler
      uses: dlang-community/setup-dlang@v1
      with:
        compiler: ${{ matrix.compiler }}

    - name: Setup VST2_SDK
      if: contains(env.SETUP_VST2_SDK, 'true') && steps.kdr-cache.outputs.cache-hit != 'true'
      run: |
        curl -LOJ https://web.archive.org/web/20200502121517if_/https://www.steinberg.net/sdk_downloads/vstsdk366_27_06_2016_build_61.zip
        7z x ./vstsdk366_27_06_2016_build_61.zip
        mkdir -p ${{ env.VST2_SDK }}/pluginterfaces/vst2.x
        cp "./VST3 SDK/pluginterfaces/vst2.x/aeffect.h" ${{ env.VST2_SDK }}/pluginterfaces/vst2.x/aeffect.h
        cp "./VST3 SDK/pluginterfaces/vst2.x/aeffectx.h" ${{ env.VST2_SDK }}/pluginterfaces/vst2.x/aeffectx.h

    # Test
    - name: Test kdr repo
      # macOS raises link errors
      if: startsWith(matrix.os,'macOS') != true
      run: |
        dub test

    - name: Build
      run: |
        if ("${{ matrix.os }}" -like 'windows*') {
          $Plugins = "-c VST2 -c VST3"
        } elseif ("${{ matrix.os }}" -like 'macOS*') {
          $Plugins = "-c VST2 -c VST3 -c AU -a x86_64"
        } elseif ("${{ matrix.os }}" -like 'ubuntu*') {
          $Plugins = "-c VST2 -c VST3 -c LV2"
        }
        $esc = '--%'
        dub run dplug:dplug-build -- $esc $Plugins --final -v
      working-directory: bin/${{ matrix.plugin }}

    - name: Archive zip
      run: |
        7z a ${{ matrix.os }}-${{ matrix.plugin }}.zip ./bin/${{ matrix.plugin }}/builds

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.plugin }}
        path: ${{ matrix.os }}-${{ matrix.plugin }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.os }}-${{ matrix.plugin }}.zip

  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip CI
